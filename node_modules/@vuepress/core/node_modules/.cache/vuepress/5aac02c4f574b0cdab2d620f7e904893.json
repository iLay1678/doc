{"remainingRequest":"/root/doc/node_modules/babel-loader/lib/index.js??ref--3-1!/root/doc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/doc/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/doc/node_modules/@vuepress/theme-default/components/Page.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/doc/node_modules/@vuepress/theme-default/components/Page.vue","mtime":1555322284574},{"path":"/root/doc/node_modules/cache-loader/dist/cjs.js","mtime":1555322284961},{"path":"/root/doc/node_modules/babel-loader/lib/index.js","mtime":1555322284951},{"path":"/root/doc/node_modules/cache-loader/dist/cjs.js","mtime":1555322284961},{"path":"/root/doc/node_modules/vue-loader/lib/index.js","mtime":1555322285623}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { resolvePage, outboundRE, endingSlashRE } from '../util';\nexport default {\n  props: ['sidebarItems'],\n  computed: {\n    lastUpdated: function lastUpdated() {\n      return this.$page.lastUpdated;\n    },\n    lastUpdatedText: function lastUpdatedText() {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated;\n      }\n\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated;\n      }\n\n      return 'Last Updated';\n    },\n    prev: function prev() {\n      var prev = this.$page.frontmatter.prev;\n\n      if (prev === false) {\n        return;\n      } else if (prev) {\n        return resolvePage(this.$site.pages, prev, this.$route.path);\n      } else {\n        return resolvePrev(this.$page, this.sidebarItems);\n      }\n    },\n    next: function next() {\n      var next = this.$page.frontmatter.next;\n\n      if (next === false) {\n        return;\n      } else if (next) {\n        return resolvePage(this.$site.pages, next, this.$route.path);\n      } else {\n        return resolveNext(this.$page, this.sidebarItems);\n      }\n    },\n    editLink: function editLink() {\n      if (this.$page.frontmatter.editLink === false) {\n        return;\n      }\n\n      var _this$$site$themeConf = this.$site.themeConfig,\n          repo = _this$$site$themeConf.repo,\n          editLinks = _this$$site$themeConf.editLinks,\n          _this$$site$themeConf2 = _this$$site$themeConf.docsDir,\n          docsDir = _this$$site$themeConf2 === void 0 ? '' : _this$$site$themeConf2,\n          _this$$site$themeConf3 = _this$$site$themeConf.docsBranch,\n          docsBranch = _this$$site$themeConf3 === void 0 ? 'master' : _this$$site$themeConf3,\n          _this$$site$themeConf4 = _this$$site$themeConf.docsRepo,\n          docsRepo = _this$$site$themeConf4 === void 0 ? repo : _this$$site$themeConf4;\n\n      if (docsRepo && editLinks && this.$page.relativePath) {\n        return this.createEditLink(repo, docsRepo, docsDir, docsBranch, this.$page.relativePath);\n      }\n    },\n    editLinkText: function editLinkText() {\n      return this.$themeLocaleConfig.editLinkText || this.$site.themeConfig.editLinkText || \"Edit this page\";\n    }\n  },\n  methods: {\n    createEditLink: function createEditLink(repo, docsRepo, docsDir, docsBranch, path) {\n      var bitbucket = /bitbucket.org/;\n\n      if (bitbucket.test(repo)) {\n        var _base = outboundRE.test(docsRepo) ? docsRepo : repo;\n\n        return _base.replace(endingSlashRE, '') + \"/src\" + \"/\".concat(docsBranch, \"/\") + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '') + path + \"?mode=edit&spa=0&at=\".concat(docsBranch, \"&fileviewer=file-view-default\");\n      }\n\n      var base = outboundRE.test(docsRepo) ? docsRepo : \"https://github.com/\".concat(docsRepo);\n      return base.replace(endingSlashRE, '') + \"/edit\" + \"/\".concat(docsBranch, \"/\") + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '') + path;\n    }\n  }\n};\n\nfunction resolvePrev(page, items) {\n  return find(page, items, -1);\n}\n\nfunction resolveNext(page, items) {\n  return find(page, items, 1);\n}\n\nfunction find(page, items, offset) {\n  var res = [];\n  flatten(items, res);\n\n  for (var i = 0; i < res.length; i++) {\n    var cur = res[i];\n\n    if (cur.type === 'page' && cur.path === decodeURIComponent(page.path)) {\n      return res[i + offset];\n    }\n  }\n}\n\nfunction flatten(items, res) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    if (items[i].type === 'group') {\n      flatten(items[i].children || [], res);\n    } else {\n      res.push(items[i]);\n    }\n  }\n}",null]}